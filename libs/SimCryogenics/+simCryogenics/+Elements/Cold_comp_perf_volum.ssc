component Cold_comp_perf_volum
    % Cold_comp_perf_volum : 2
    %
    % This component is a perfect Cold Compressor with constant 
    % isentropic efficiency. It impose the flowrate on both
    % its inlet and oulet port. The outlet port also impose
    % the enthalpy.
    % 
    % To ensure model compilation, this component inlet port 
    % must be connected to a component node that impose both
    % enthalpy and pressure. The oulet port must be  
    % connected to a component node that impose pressure.
    % 
    % The parameter eta must be in the [0 1] interval.
    
    nodes
        in1  = simCryogenics.fluid; % in:left
        out1 = simCryogenics.fluid; % out:right
    end
    
    inputs
        M_cons = { 0 , 'kg/s' }; % M:left
    end
    
    components (Hidden=true)
    	v1 = simCryogenics.Utilities.verif;
        v2 = simCryogenics.Utilities.verif;
    end
     
    parameters
        rho0 = { 1    , 'kg/m^3' }; % Nominal inlet density
        eta  = { 0.9  , '1'      }; % Nominal efficiency
        vol  = { 1    , '1'      }; % Volumetric
    end
    
    variables (Hidden = true)
        Sin    = { 0, 'kJ/kg'   }; % Entropy
        HoutIs = { 0, 'kJ/kg'   }; % Isentropic outptut enthalpy      
        rho    = { 1 , 'kg/m^3' }; % Inlet density
    end

    function setup %#simple
        if eta < 0, error('Normal efficiency of the turbine must be greater than zero'); end
        if eta >1, error('Normal efficiency can''t be greater than 1'); end
    end
    
    connections
        connect(in1,  v1.in1);
        connect(out1, v2.in1);
    end  

    equations  
        Sin    == tablelookup(in1.P_P_H, in1.H_P_H, in1.S_P_H    , in1.P, in1.H, interpolation=linear, extrapolation=nearest);
        HoutIs == tablelookup(in1.P_P_S, in1.S_P_S, in1.H_P_S    , out1.P, Sin , interpolation=linear, extrapolation=nearest);
        rho    == tablelookup(in1.P_P_H, in1.H_P_H, in1.rho_P_H  , in1.P, in1.H, interpolation=linear, extrapolation=nearest);
        
        if vol==1
            out1.M == M_cons*rho/rho0;
        else
            out1.M == M_cons;
        end
            
        in1.M  == out1.M;
        out1.H == in1.H + (HoutIs-in1.H)/eta;
       
    end
end